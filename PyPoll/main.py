#*********Poll python exersize************import osimport csv#path to colect data from the csv file in the resource folderpath =os.path.join('/Users/ak/Documents/DA/Python/python_challenge/PyPoll/Resources/election_data.csv')#read in csv filewith open(path, 'r') as pollfile:    #pass file to csv reader and split the data on commas    csv_reader = csv.reader(pollfile, delimiter=',')    #print(csv_reader)        #ommit the header row    csv_header = next(csv_reader)        #create a line count and set it to 0    line_count = 0            #create a list to hold unique candidates names    candidates = []    candidate_all = []    candidates_votes = []    percent_votes = []        #loop through csv file    for row in csv_reader:                #calcualte number of rows        #line_count +=1                #create a list of names        candidate_all.append(row[2])                #calcualte total number of votes as the number of records in the list        count = int(len(candidate_all))                 #add unique candidates names to the candidates list        if row[2] not in candidates:           candidates.append(row[2])        #print(candidates)               for i in range(len(candidates)):                if i == 0:            count2 = candidate_all.count(candidates[i])            percent = round((candidate_all.count(candidates[i])/count)*100,2)        else:            count2 = candidate_all.count(candidates[i])            percent = round((candidate_all.count(candidates[i])/count)*100,2)                    candidates_votes.append(count2)        percent_votes.append(percent)        #print number of votes        print(f"Number of Votes is: {count}", "\n")#print(candidates)#print(candidates_votes)#print(percent_votes)#create list to hold values of combined text string prin =[]#loop through candiates list to create a text srting for each  candidtae whith will be printed in exported to output.txtfor x in range(len(candidates)):        if x == 0:        text = (candidates[x])+": "+str(percent_votes[x])+"%, "+ str(candidates_votes[x])        prin.append(text)            else:        text = (candidates[x])+": "+str(percent_votes[x])+"%, "+ str(candidates_votes[x])        prin.append(text)    #print the results         print(*prin, sep = "\n")#find maximum value to determin the winnermaxv = max(percent_votes)   #print(maxv)#returning name for max percentaged based on list indexwinner = candidates[percent_votes.index(maxv)]print(f"\nThe winner of the rally is: {winner} with {maxv}% of votes" )#define a path for the output txt file to export the resultspath_txt = os.path.join('/Users/ak/Documents/DA/Python/python_challenge/PyPoll/Analysis/Output.txt')#open the output file, then write the datawith open(path_txt, 'w') as output:    output.write("Election results:" + "\n")    output.write("---------------------------" + "\n")    output.write("Total votes: " + str(count) + "\n")    output.write("---------------------------" + "\n")    output.write('\n'.join(prin)+"\n")    output.write("---------------------------" + "\n")    output.write("The winner is: " + (winner))        '''         #create a dicitionary to store name values and counts. ref: https://www.tutorialspoint.com/count-frequencies-of-all-elements-in-array-in-python       name_count = {}       #loop thoruhg the list of names    for name in candidate_all:              #increment by 1 if name exist in the dictionary               if name in name_count:           name_count[name] +=1                  #add 1 if name is not in the dictionary          else:           name_count[name] = 1                                #print number of votes        print(f"Number of Votes is: {count}")#print(candidates)#create a list to hold percentages values for each candidateperc_list = []#loop through the dictionary for key, value in name_count.items():        #calculate percentage of total votes for each value in the dictionary    perc = round(value/count*100,3)        #add percentages to the new list    perc_list.append(perc)            #name_count[key] = str(perc)+"%"            #print dictionary output and percentage of total    #print(f"{key}:  {perc}%  ({value})")#zip dictionary and percentage list together to determin the winner#zip_list = zip(perc_list, name_count.keys(),name_count.values())#print(zip_list())#max_vote = max(zip_list) #https://www.youtube.com/watch?v=E1GueQ5ULc8#print the winner#print(f"The winner is {max_vote[1]}")        #define a path for the output txt filepath_txt = os.path.join('/Users/ak/Documents/DA/Python/python_challenge/PyPoll/Analysis/Output.txt')#open the output file, then write the datawith open(path_txt, 'w') as output:    writer_txt = output.write("Election results" + "\n")    writer_txt = output.write("------------------" + "\n")    writer_txt = output.write("Total votes: " + str(count) + "\n")    writer_txt = output.write("------------------" + "\n")    #writer_txt = output.write(str(name_count)+ "\n")    writer_txt = output.write("------------------" + "\n")    #writer_txt = output.write("The winner is: " + (max_vote[1]) + "\n")'''